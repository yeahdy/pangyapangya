<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.pangyapangya.mappers.BakeryMapper">
    <sql id="search">
        <if test="keyword != null">
            <trim suffix="AND">
                (CONTENT LIKE '%'||#{keyword}||'%' OR TITLE LIKE '%'||#{keyword}||'%')
            </trim>
        </if>
    </sql>

    <select id="breadList" resultType="bakeryVO">
        SELECT * FROM
        (
        SELECT ROWNUM R, BNO, TITLE, CONTENT, CEOID, CEONAME, SHOPNAME, BAKERYPHOTO, REGDATE, BREADTYPE, BREADNAME, BREADPRICE, REVIEWCNT
        FROM TBL_BAKERY
        ORDER BY BNO DESC
        )
        WHERE
        <include refid="search"></include>
        <![CDATA[
            R<= 20
        ]]>
    </select>

    <select id="breadList_main" resultType="bakeryVO">
        <![CDATA[
            SELECT * FROM
            (
                SELECT ROWNUM R, BNO, TITLE, CONTENT, CEOID, CEONAME, SHOPNAME, BAKERYPHOTO, REGDATE, BREADTYPE, BREADNAME, BREADPRICE, REVIEWCNT
                FROM TBL_BAKERY
                ORDER BY BNO DESC
            )
            WHERE R<= 8
        ]]>
    </select>

    <select id="breadListCeo" resultType="bakeryVO">
        <![CDATA[
            SELECT * FROM
            (
                SELECT ROWNUM R, BNO, TITLE, CONTENT, CEOID, CEONAME, SHOPNAME, REGDATE, BREADTYPE, BREADNAME, BREADPRICE, BAKERYPHOTO
                FROM TBL_BAKERY
                ORDER BY BNO DESC
            )
            WHERE R<=20
        ]]>
    </select>

    <select id="getList" resultType="bakeryVO">
        <![CDATA[
        SELECT BNO, TITLE, CONTENT, CEOID, CEONAME, SHOPNAME, REGDATE, BREADTYPE, BREADNAME, BREADPRICE, BAKERYPHOTO
        FROM
        (
            /*알리아스를 붙인 컬럼에 WHERE절에서 접근할 때에는 FROM절에 작성된 테이블의 컬럼과 동일한 이름으로만 사용이 가능하다.*/
            SELECT /*+ INDEX_DESC(TBL_BOARD PK_BOARD) */
            ROWNUM R, BNO, TITLE, CONTENT, CEOID, CEONAME, SHOPNAME, REGDATE, BREADTYPE, BREADNAME, BREADPRICE, BAKERYPHOTO
            FROM TBL_BAKERY
            WHERE
        ]]>
        <![CDATA[
        ROWNUM <= #{pageNum} * #{amount}
        )
        WHERE R > (#{pageNum} - 1) * #{amount}
        ]]>
    </select>

    <insert id="insert">
        INSERT INTO TBL_BAKERY (BNO, TITLE, CONTENT, CEOID, CEONAME, SHOPNAME, REGDATE, BREADTYPE, BREADNAME, BREADPRICE, BAKERYPHOTO, REVIEWCNT)
        VALUES(TBL_BAKERY_SEQ.NEXTVAL, #{title}, #{content}, #{ceoId}, #{ceoName}, #{shopName}, SYSDATE, #{breadType}, #{breadName}, #{breadPrice}, '
/images/brownie.jpg',0)
    </insert>

    <insert id="insertSelectKey_bno">
        <selectKey keyProperty="bno" order="BEFORE" resultType="long">
            SELECT TBL_BAKERY_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_BAKERY (BNO, TITLE, CONTENT, CEOID, CEONAME, SHOPNAME, REGDATE, BREADTYPE, BREADNAME, BREADPRICE, BAKERYPHOTO,REVIEWCNT)
        VALUES(#{bno}, #{title}, #{content}, #{ceoId}, #{ceoName}, #{shopName}, SYSDATE, #{breadType}, #{breadName}, #{breadPrice}, '
        /images/brownie.jpg',0)
    </insert>

    <select id="read" resultType="bakeryVO">
        SELECT BNO, TITLE, CONTENT, CEOID, CEONAME, SHOPNAME, REGDATE, BREADTYPE, BREADNAME, BREADPRICE, BAKERYPHOTO
        FROM TBL_BAKERY
        WHERE BNO = #{bno}
    </select>

    <update id="update">
        UPDATE TBL_BAKERY
        SET TITLE = #{title}, CONTENT = #{content}
        WHERE BNO = #{bno}
    </update>

    <delete id="delete">
        DELETE FROM TBL_BAKERY WHERE BNO = #{bno}
    </delete>

    <select id="getTotal" resultType="_int">
        SELECT COUNT(BNO) FROM TBL_BAKERY
        <where>
            <trim suffixOverrides="AND">
                <include refid="search"></include>
            </trim>
        </where>
    </select>

    <select id="myTotal" resultType="_int">
        SELECT COUNT(BNO) FROM TBL_BAKERY
        WHERE CEOID = #{ceoId}
    </select>

    <update id="ceoUpdate">
        UPDATE TBL_CEO
        SET CEOPW = #{ceoPw}, SHOPNAME = #{shopName}, SHOPCALLNUMBER = #{shopCallNumber}, SHOPZIPCODE = #{shopZipcode}, SHOPADDRESS = #{shopAddress}, SHOPADDRESSDETAIL = #{shopAddressDetail}, PHONENUM = #{phoneNum}, SHOPREGNUM = #{shopRegNum}
        WHERE CEOID = #{ceoId}
    </update>

    <update id="ceoDelete">
        UPDATE TBL_CEO
        SET STATUS = 1
        WHERE CEOID = #{ceoId}
    </update>

    <select id="breadInfo" resultType="bakeryVO">
        SELECT * FROM TBL_BAKERY
        WHERE BNO = #{bno}
    </select>

    <select id="breadReply" resultType="breadReviewVO">
        <![CDATA[
            SELECT * FROM
            (
                SELECT ROWNUM R, RNO, BNO, STAR, REPLY, USERID, REPLYDATE
                FROM TBL_BAKERYREVIEWREPLY
                ORDER BY BNO DESC
            )
            WHERE R<=20
        ]]>
        /*SELECT * FROM TBL_BAKERYREVIEWREPLY
        WHERE BNO = #{bno}*/
    </select>

    <select id="getListWithPaging" resultType="breadReviewVO">
        <![CDATA[
        SELECT STAR, REPLY, USERID, REPLYDATE
        FROM
        (
            SELECT /*+ INDEX_DESC(TBL_REPLY PK_REPLY) */
            ROWNUM R, RNO, BNO, STAR, REPLY, USERID, REPLYDATE
            FROM TBL_BAKERYREVIEWREPLY
            WHERE BNO = #{bno}
            AND ROWNUM <= #{criteria.pageNum} * #{criteria.amount}
        )
        WHERE R > (#{criteria.pageNum} - 1) * #{criteria.amount}
        ]]>
    </select>
</mapper>